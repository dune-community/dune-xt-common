# This file is part of the dune-xt-common project:
#   https://github.com/dune-community/dune-xt-common
# The copyright lies with the authors of this file (see below).
# License: BSD 2-Clause License (http://opensource.org/licenses/BSD-2-Clause)
# Authors:
#   Felix Schindler (2015 - 2016)
#   Rene Milk       (2015 - 2016)
#   Tobias Leibner  (2015)

sudo: required
dist: trusty
language: generic

addons:
  apt:
    sources: &commonsources
    packages: &commonpackages
    - cmake
    - cmake-data
    - doxygen
    - texlive-base
    - python-virtualenv
    - libboost1.55-all-dev
    - python-pip
    - libtbb-dev
    - ccache
    - libsuitesparse-dev
    - lcov
    - curl
    - ninja-build
    - python3-requests

before_install:
  - |-
    : ${OPTS:="config.opts/travis.ninja"} && export OPTS
  - |-
    : ${BUILD_CMD:="ninja -k 10000 -j 2"} && export BUILD_CMD
  - cd $HOME
  # workaround for gnutls bug is using git built against curl-openssl (cannot go into apt script below)
  - sudo -E rm /etc/apt/sources.list.d/*git*.list
  - sudo -E add-apt-repository -y ppa:pymor/travis && sudo -E aptitude update && sudo -E aptitude install git -yq
  - test -d ${SUPERDIR}/ || git clone --branch=releases/2.4 https://github.com/dune-community/dune-xt-super.git ${SUPERDIR}/
  - cd ${SUPERDIR}/
  - git submodule update --init --recursive
  - git submodule status ; git status
  - ${SUPERDIR}/.travis/trusty_apt_setup.bash
  - export PATH=/usr/lib/ccache:$PATH
  - export DCTRL_ARG="--builddir=${DUNE_BUILD_DIR}  --opts=${OPTS}"
  # our local scripts look for an OPTS env entry
  - ./local/bin/download_external_libraries.py
  - ./local/bin/build_external_libraries.py
  # ensures ${MY_MODULE} from travis own checkout is used
  - echo removing modules ${MODULES_TO_DELETE}
  - rm -rf ${MODULES_TO_DELETE} ${MY_MODULE}

# command to install dependencies
install:
  - cd ${SUPERDIR}/
  - export SRC_DCTRL=$PWD/dune-common/bin/dunecontrol
  - ${SRC_DCTRL} ${DCTRL_ARG} all
  # move my travis checkout into this source tree
  - cp -ra ${TRAVIS_BUILD_DIR} .

before_script:
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} configure
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD}
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} test_binaries
    - |
     if [[ "${CC}" == "gcc"* ]] ; then
        lcov -q --gcov-tool ${GCOV} -b ${SUPERDIR}/${MY_MODULE} -d ${DUNE_BUILD_DIR}/${MY_MODULE} -c -o ${HOME}/baseline.lcov --no-external --initial
     fi

script:
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} test
    - ${SUPERDIR}/.travis/init_sshkey.bash ${encrypted_862ca47045d1_key} ${encrypted_862ca47045d1_iv} keys/dune-community/dune-xt-common-testlogs
    # retry this step becuase of the implicated race condition in cloning and pushing with multiple builder running in parallel
    - travis_retry ${SUPERDIR}/scripts/bash/travis_upload_test_logs.bash ${DUNE_BUILD_DIR}/${MY_MODULE}/dune/xt/*/test/

    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} headercheck
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} install | grep -v "Installing"
    - ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} package_source

# runs independent of 'script' failure/success
after_script:
    - |
     if [ "x${CLANG_FORMAT}" != "x" ] ; then
        git config --global hooks.clangformat ${CLANG_FORMAT}
        PYTHONPATH=${SUPERDIR}/scripts/python/ python3 -c "import travis_report as tp; tp.clang_format_status(\"${TRAVIS_BUILD_DIR}\")"
     fi
    - |
      if [[ $TRAVIS_JOB_NUMBER == *.1 ]] ; then
        ${SRC_DCTRL} ${DCTRL_ARG} --only=${MY_MODULE} bexec ${BUILD_CMD} doc
        ${SUPERDIR}/.travis/init_sshkey.bash ${encrypted_862ca47045d1_key} ${encrypted_862ca47045d1_iv} keys/dune-community/dune-community.github.io
        ${SUPERDIR}/.travis/deploy_docs.bash ${MY_MODULE} ${DUNE_BUILD_DIR}
      fi
    - ${SUPERDIR}/.travis/produce_and_upload_coverage.bash
    # we currently have dash instance up - ${SUPERDIR}/.travis/ctest_with_dash_upload.bash

notifications:
  email:
    on_success: change
    on_failure: change
  webhooks:
    - https://buildtimetrend.herokuapp.com/travis

#after_success:
#- coveralls

branches:
  except:
    - gh-pages

cache:
  directories:
    - $HOME/.ccache

env:
  global:
    - MY_MODULE=dune-xt-common
    - DUNE_BUILD_DIR=${HOME}/dune_build/
    - INSTALL_DIR=$HOME/dune
    - CTEST_OUTPUT_ON_FAILURE=1
    - GCOV=/usr/bin/gcov-4.9
    - SUPERDIR=${HOME}/src

matrix:
  include:
    - os: linux
      addons: &gcc49
        apt:
          sources:
          - *commonsources
          - 'ubuntu-toolchain-r-test'
          packages:
          - *commonpackages
          - ['g++-4.9', 'gcc-4.9']
      env: CXX=g++-4.9 CC=gcc-4.9 MODULES_TO_DELETE="dune-xt-grid dune-xt-la dune-xt-functions"
    - os: linux
      addons: *gcc49
      env: CXX=g++-4.9 CC=gcc-4.9 MODULES_TO_DELETE="dune-xt-grid dune-xt-la dune-xt-functions dune-fem dune-pdelab dune-typetree dune-grid dune-istl"
    - os: linux
      addons: *gcc49
      env: CXX=g++-4.9 CC=gcc-4.9 MODULES_TO_DELETE="dune-xt-grid dune-xt-la dune-xt-functions dune-fem dune-pdelab"

    - os: linux
      addons:
        apt:
          sources:
          - *commonsources
          - 'ubuntu-toolchain-r-test'
          packages:
          - *commonpackages
          - ['g++-5', 'gcc-5']
      env: CXX=g++-5 CC=gcc-5 MODULES_TO_DELETE="dune-xt-grid dune-xt-la dune-xt-functions"

    - os: linux
      addons:
        apt:
          sources:
          - *commonsources
          - ['ubuntu-toolchain-r-test']
          packages:
          - *commonpackages
      env: CXX=clang++-3.8 CC=clang-3.8 MODULES_TO_DELETE="dune-xt-grid dune-xt-la dune-xt-functions" CLANG_FORMAT="/usr/bin/clang-format-3.8"

    - os: linux
      addons:
        apt:
          sources:
          - *commonsources
          - ['ubuntu-toolchain-r-test']
          packages:
          - *commonpackages
      # fake last module to delete to distinguish testlogs
      env: OPTS=config.opts/travis.make BUILD_CMD="make -k -j2" CXX=clang++-3.8 CC=clang-3.8 MODULES_TO_DELETE="dune-xt-grid dune-xt-la dune-xt-functions with-make"

    #- os: linux
      #addons:
        #apt:
          #sources:
          #- *commonsources
          #- ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.8']
          #packages:
          #- *commonpackages
          #- ['clang-3.8']
      #env: CXX=clang++-3.8 CC=clang-3.8 MODULES_TO_DELETE="dune-xt-grid dune-xt-la dune-xt-functions"
